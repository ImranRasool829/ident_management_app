<?xml version="1.0" encoding="utf-8"?>
<resources>
    <attr name="sephiroth_rangeProgressBarStyle" format="reference" />
    <attr name="sephiroth_rangeSeekBarStyle" format="reference" />
    <attr name="sephiroth_rangeSeekBarStyleInverse" format="reference" />


    <declare-styleable name="AlphabetIndexFastScrollRecyclerView">
        <attr name="setIndexTextSize" format="integer" />
        <attr name="setIndexbarWidth" format="float" />
        <attr name="setIndexbarMargin" format="float" />
        <attr name="setPreviewPadding" format="integer" />
        <attr name="setIndexBarCornerRadius" format="integer" />
        <attr name="setIndexBarTransparentValue" format="float" />
        <attr name="setIndexBarColor" format="string" />
        <attr name="setIndexBarTextColor" format="string" />
        <attr name="setIndexBarHighlightTextColor" format="string" />
        <attr name="setIndexBarColorRes" format="color" />
        <attr name="setIndexBarTextColorRes" format="color" />
        <attr name="setIndexBarHighlightTextColorRes" format="color" />
    </declare-styleable>

    <declare-styleable name="AVLoadingIndicatorView">
        <attr name="minWidth" format="dimension" />
        <attr name="maxWidth" format="dimension" />
        <attr name="minHeight" format="dimension" />
        <attr name="maxHeight" format="dimension" />
        <attr name="indicatorName" format="string" />
        <attr name="indicatorColor" format="color" />
    </declare-styleable>

    <declare-styleable name="RefreshView">
        <attr name="type" format="enum">
            <enum name="soup" value="0" />
        </attr>
    </declare-styleable>
    <declare-styleable name="AnimatedPullToRefreshLayout">

        <attr name="animationSpeed" format="enum">

            <enum name="fast" value="0" />

            <enum name="slow" value="1" />

        </attr>

        <attr name="headerText" format="string" />

        <attr name="headerTextSize" format="dimension" />

        <attr name="headerTextColor" format="color" />

        <attr name="headerBackgroundColor" format="color" />

        <!--Animation-->


        <attr name="headerTextAnimation" format="enum">

            <enum name="rotateCW" value="0" />

            <enum name="rotateACW" value="1" />

            <enum name="fade" value="2" />

            <enum name="zoom" value="3" />

        </attr>

        <attr name="headerLoopAnimation" format="enum">

            <enum name="zoom" value="0" />

            <enum name="fade" value="1" />

        </attr>

        <attr name="headerTextAnimIteration" format="integer" />

        <attr name="headerLoopAnimIteration" format="integer" />

        <attr name="headerTextColorAnimationEnabled" format="boolean" />

        <attr name="headerTextFontFamily" format="reference" />

    </declare-styleable>

    <declare-styleable name="ButtonCustom">
        <attr name="btnTextColor" format="color" />
        <attr name="btnBgColor" format="color" />
        <attr name="btnStrokeColor" format="color" />
        <attr name="btnRadius" format="dimension" />
        <attr name="btnStrokePadding" format="dimension" />
        <attr name="btnleftPadding" format="dimension" />
        <attr name="btnRytPadding" format="dimension" />
        <attr name="btnText" format="string" />
        <attr name="btnTextSize" format="dimension" />
        <attr name="btnMinWidth" format="dimension" />
        <attr name="btnTextAllCaps" format="boolean" />
        <attr name="btnDrawable" format="integer" />
    </declare-styleable>

    <declare-styleable name="CirleImageView">
        <attr name="civ_border_width" format="dimension" />
        <attr name="civ_border_color" format="color" />
        <attr name="civ_border_overlay" format="boolean" />
        <attr name="civ_fill_color" format="color" />
        <attr name="civ_circle_background_color" format="color" />
    </declare-styleable>
    <declare-styleable name="EasySwipeMenuLayout">
        <attr name="leftMenuView" format="reference" />
        <attr name="rightMenuView" format="reference" />
        <attr name="contentView" format="reference" />
        <attr name="canRightSwipe" format="boolean" />
        <attr name="canLeftSwipe" format="boolean" />
        <attr name="fraction" format="float" />
    </declare-styleable>
    <declare-styleable name="RoundedImageView">
        <attr name="riv_corner_radius" format="dimension" />
        <attr name="riv_corner_radius_top_left" format="dimension" />
        <attr name="riv_corner_radius_top_right" format="dimension" />
        <attr name="riv_corner_radius_bottom_left" format="dimension" />
        <attr name="riv_corner_radius_bottom_right" format="dimension" />
        <attr name="riv_border_width" format="dimension" />
        <attr name="riv_border_color" format="color" />
        <attr name="riv_mutate_background" format="boolean" />
        <attr name="riv_oval" format="boolean" />
        <attr name="android:scaleType" />
        <attr name="riv_tile_mode">
            <enum name="clamp" value="0" />
            <enum name="repeat" value="1" />
            <enum name="mirror" value="2" />
        </attr>
        <attr name="riv_tile_mode_x">
            <enum name="clamp" value="0" />
            <enum name="repeat" value="1" />
            <enum name="mirror" value="2" />
        </attr>
        <attr name="riv_tile_mode_y">
            <enum name="clamp" value="0" />
            <enum name="repeat" value="1" />
            <enum name="mirror" value="2" />
        </attr>
    </declare-styleable>
    <declare-styleable name="IndicatorSeekBar">
        //seekBar
        <attr name="isb_max" format="float" /><!-- the max value of seekBar to seek, default 100-->
        <attr name="isb_min" format="float" /><!-- the min value of seekBar to seek, default 0 -->
        <attr name="isb_progress" format="float" /><!-- the current progress value of seekBar, default 0-->
        <attr name="isb_progress_value_float" format="boolean" /><!--set the value of seekBar to float type, default false-->
        <attr name="isb_seek_smoothly" format="boolean" /><!--true to seek smoothly when has ticks, default false-->
        <attr name="isb_r2l" format="boolean" /><!--compat app local change,like arabic local, default false-->
        <attr name="isb_ticks_count" format="integer" /><!--seekBar's ticks count, default zero-->
        <attr name="isb_user_seekable" format="boolean" /><!--prevent user from seeking,only can be change thumb location by setProgress(), default false-->
        <attr name="isb_clear_default_padding" format="boolean" /><!-- set seekBar's leftPadding&rightPadding to zero, default false, default padding is 16dp-->
        <attr name="isb_only_thumb_draggable" format="boolean" /><!--user change the thumb's location by touching thumb/touching track,true for touching track to seek. false for touching thumb; default false-->
        //indicator
        <attr name="isb_show_indicator"><!-- the type of indicator, default rectangle_rounded_corner/0.-->
            <enum name="none" value="0" />
            <enum name="circular_bubble" value="1" />
            <enum name="rounded_rectangle" value="2" />
            <enum name="rectangle" value="3" />
            <enum name="custom" value="4" /><!--choose custom type that you can set the custom indicator layout you want.-->
        </attr>
        <attr name="isb_indicator_color" format="color|reference" /><!-- indicator's color, default #FF4081-->
        <attr name="isb_indicator_text_color" format="color|reference" /><!-- indicator's text color, default #FF4081 -->
        <attr name="isb_indicator_text_size" format="dimension|reference" /><!-- indicator's text size, default 14sp-->
        <attr name="isb_indicator_content_layout" format="reference" /><!-- when you set indicator type to custom , you can set ths indicator layout you want-->
        <attr name="isb_indicator_top_content_layout" format="reference" /> <!--set the indicator's top view you want, not impact arrow , effect on indicator type : rectangle or rectangle_rounded_corner-->
        //track
        <attr name="isb_track_background_size" format="dimension|reference" /><!-- set indicatorSeekBar's track background bar size, default 2dp-->
        <attr name="isb_track_background_color" format="color|reference" /><!-- set indicatorSeekBar's track background bar color, default #D7D7D7-->
        <attr name="isb_track_progress_size" format="dimension|reference" /><!-- set indicatorSeekBar's track progress bar size, default 2dp-->
        <attr name="isb_track_progress_color" format="color|reference" /><!-- set indicatorSeekBar's track progress bar color, default #FF4081-->
        <attr name="isb_track_rounded_corners" format="boolean" /><!-- set the track's both ends' shape to round-->
        //thumb text
        <attr name="isb_thumb_text_color" format="color|reference" /><!--set thumb's color, default #FF4081-->
        <attr name="isb_show_thumb_text" format="boolean" /><!--show thumb text or not, default false-->
        //thumb
        <attr name="isb_thumb_size" format="dimension|reference" /><!--set thumb's size, default 14dp, thumb size will be limited in 30dp-->
        <attr name="isb_thumb_color" format="color|reference" /><!--set thumb's color, default #FF4081-->
        <attr name="isb_thumb_drawable" format="reference" /><!--set custom thumb's drawable you want,thumb size will be limited in 30dp, if drawable less than 30dp ,will show in intrinsic size -->
        <attr name="isb_thumb_adjust_auto" format="boolean" /><!--set the thumb move to the closed tick after touched up, default true-->
        //tickMarks
        <attr name="isb_tick_marks_color" format="color|reference" /><!--set tick's color, default #FF4081-->
        <attr name="isb_tick_marks_size" format="dimension|reference" /><!--set the tick width, default 10dp,custom drawable will be limited in 30dp, if less than 30dp ,will show in intrinsic size-->
        <attr name="isb_tick_marks_drawable" format="reference" /><!--set custom tick's drawable you want, custom drawable will be limited in 30dp, if less than 30dp ,will show in intrinsic size-->
        <attr name="isb_tick_marks_ends_hide" format="boolean" /><!--hide 2 ticks on the seekBar's both ends, default false-->
        <attr name="isb_tick_marks_swept_hide" format="boolean" /><!--hide the ticks on the seekBar's thumb left, default false-->
        <attr name="isb_show_tick_marks_type"><!--select the tick shape type, default not show： NONE/0-->
            <enum name="none" value="0" />
            <enum name="oval" value="1" />
            <enum name="square" value="2" />
            <enum name="divider" value="3" /> <!--show tickMarks shape as vertical line , line'size is 1 dp.-->
        </attr>
        //tickTexts
        <attr name="isb_show_tick_texts" format="boolean" /><!--show the text below tick or not, default false-->
        <attr name="isb_tick_texts_color" format="reference|color" /><!--set texts' color, default #FF4081-->
        <attr name="isb_tick_texts_size" format="dimension|reference" /><!--set the text size of tick below text, default 13sp-->
        <attr name="isb_tick_texts_array" format="reference" /><!--set the custom texts below tick to replace default progress text, default null-->
        <attr name="isb_tick_texts_typeface"><!--select the typeface for tick texts/thumb text, default normal-->
            <enum name="normal" value="0" />
            <enum name="monospace" value="1" />
            <enum name="sans" value="2" />
            <enum name="serif" value="3" />
        </attr>
    </declare-styleable>
    <declare-styleable name="SwipeRevealLayout">
        <attr name="dragEdge">
            <flag name="left" value="1" />
            <flag name="right" value="2" />
            <flag name="top" value="4" />
            <flag name="bottom" value="8" />
        </attr>

        <attr name="mode">
            <enum name="normal" value="0" />
            <enum name="same_level" value="1" />
        </attr>

        <attr name="flingVelocity" format="integer" />

        <attr name="minDistRequestDisallowParent" format="dimension" />
    </declare-styleable>
    <declare-styleable name="CalendarView">

        <!-- The xml resource that is inflated and used as the day cell view, must be provided. -->
        <attr name="cv_dayViewResource" format="reference" />

        <!-- The xml resource that is inflated and used as a header for every month. -->
        <attr name="cv_monthHeaderResource" format="reference" />

        <!-- The xml resource that is inflated and used as a footer for every month. -->
        <attr name="cv_monthFooterResource" format="reference" />

        <!-- The maximum number of rows(1 to 6) to show on each month. If a month has a total of
        6 rows and maxRowCount is set to 4, there will be two appearances of that month on the
        calendar, the first one will show 4 rows and the second one will show the remaining 2 rows.
        To show a week mode calendar, set this value to 1. -->
        <attr name="cv_maxRowCount" format="integer" />

        <!-- A ViewGroup which is instantiated and used as the background for each month.
         This class must have a constructor which takes only a Context. You should
         exclude the name and constructor of this class from code obfuscation if enabled. -->
        <attr name="cv_monthViewClass" format="string" />

        <!-- Determines if dates of a month should stay in its section or can flow into another month's section.
         If true, a section can only contain dates belonging to that month, its inDates and outDates.
         if false, the dates are added continuously, irrespective of month sections.

         When this property is false, a few things behave slightly differently:
         - If inDateStyle is either `allMonths` or `firstMonth`, only the first index will contain inDates.
         - If outDateStyle is either `endOfRow` or `endOfGrid`, only the last index will contain outDates.
         - If outDateStyle is `endOfGrid`, outDates are generated for the last index until it
           satisfies the `maxRowCount` requirement. -->
        <attr name="cv_hasBoundaries" format="boolean" />

        <!--This determines the scroll direction of the the calendar. -->
        <attr name="cv_orientation" format="enum">
            <enum name="horizontal" value="0" />
            <enum name="vertical" value="1" />
        </attr>

        <!-- Determines how outDates are generated for each month on the calendar.
        If set to `endOfRow`, the calendar will generate outDates until
        it reaches the first end of a row. This means that if a month has 6 rows,
        it will display 6 rows and if a month has 5 rows, it will display 5 rows.
        If set to `endOfGrid`, the calendar will generate outDates until
        it reaches the end of a 6 x 7 grid. This means that all months will have 6 rows.
        If set to `none`, no outDates will be generated. -->
        <attr name="cv_outDateStyle" format="enum">
            <enum name="endOfRow" value="0" />
            <enum name="endOfGrid" value="1" />
            <enum name="none" value="2" />
        </attr>

        <!-- Determines how inDates are generated for each month on the calendar.
         If set to `allMonths`, the calendar will generate inDates for all months.
         If set to `firstMonth`, inDates will be generated for the first month only.
         If set to `none`, inDates will not be generated, this means that there will be
         no offset on any month. -->
        <attr name="cv_inDateStyle" format="enum">
            <enum name="allMonths" value="0" />
            <enum name="firstMonth" value="1" />
            <enum name="none" value="2" />
        </attr>

        <!-- The scrolling behavior of the calendar. If `paged`, the calendar
        will snap to the nearest month after a scroll or swipe action.
        If `continuous`, the calendar scrolls normally. -->
        <attr name="cv_scrollMode" format="enum">
            <enum name="continuous" value="0" />
            <enum name="paged" value="1" />
        </attr>

        <!-- The duration in milliseconds of the animation used to adjust the CalendarView's
        height when `scrollMode` is `paged` and the CalendarView height is set to `wrap_content`.
        The height change happens when the CalendarView scrolls to a month which has less or more
        rows than the previous one. Default value is 200. To disable the animation, set this value to zero. -->
        <attr name="cv_wrappedPageHeightAnimationDuration" format="integer" />
    </declare-styleable>

    <declare-styleable name="RangeProgressBar">
        <attr name="android:progressDrawable" />
        <attr name="android:minWidth" />
        <attr name="android:maxWidth" />
        <attr name="android:minHeight" />
        <attr name="android:maxHeight" />
        <attr name="android:max" />
        <attr name="android:progressTint" />
        <attr name="android:progressTintMode" />
        <attr name="android:progressBackgroundTint" />
        <attr name="android:progressBackgroundTintMode" />
        <attr name="android:interpolator" />

        <!--
             Offset dimension between start and end values.
             If this value is 0 then startValue and endValue position (x) will be the same.
         -->
        <attr name="range_progress_offset" format="dimension" />

        <!-- progress start value -->
        <attr name="range_progress_startValue" format="integer" />
        <!-- progress end value -->
        <attr name="range_progress_endValue" format="integer" />

        <!--
        minimum value between start and end progress values.
         The default is 0, meaning that both start and end can have the same value.
         -->
        <attr name="range_progress_startEnd_minDiff" format="integer" />

        <!-- set the maximum value the start progress can have. This will override range_progress_startEndBoundaries -->
        <attr name="range_progress_startMaxValue" format="integer" />

        <!-- set the minimum value the end progress can have. This will override range_progress_startEndBoundaries -->
        <attr name="range_progress_endMinValue" format="integer" />

    </declare-styleable>

    <declare-styleable name="RangeSeekBar">
        <attr name="android:thumb" />
        <!--
            Left thumb drawable. if not declared, the android:thumb will be used
            from the parent style
        -->
        <attr name="range_seekbar_leftThumb" format="reference" />
        <attr name="range_seekbar_rightThumb" format="reference" />
        <attr name="range_seekbar_useDisabledAlpha" format="boolean" />

        <!--
            size of each step while moving/dragging each thumb
        -->
        <attr name="range_seekbar_stepSize" format="integer" />

        <!--
            seekbar uses clipRect to draw its thumbs. increase/decrease this value
            will result in adding/removing "white" clipping to the background progress around
            the thumbs
        -->
        <attr name="range_seekbar_thumbInset" format="dimension" />

        <attr name="android:thumbOffset" />
        <attr name="android:splitTrack" />
        <attr name="android:thumbTint" />
        <attr name="android:thumbTintMode" />
        <attr name="android:tickMark" />
        <attr name="android:tickMarkTint" />
        <attr name="android:tickMarkTintMode" />
    </declare-styleable>


</resources>